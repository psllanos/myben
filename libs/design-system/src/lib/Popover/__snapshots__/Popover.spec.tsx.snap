// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popover when closed should render the button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="relative inline-block"
        data-headlessui-state=""
      >
        <button
          aria-controls="headlessui-popover-panel-:r1:"
          aria-expanded="false"
          class="px-4 py-2 rounded text-base bg-cyan text-gray-700 shadow hover:bg-cyan-400 focus:bg-cyan-400 focus:ring-cyan inline-flex items-center justify-center text-center font-medium leading-6 whitespace-nowrap select-none cursor-pointer focus:outline-none focus:ring focus:ring-opacity-60 disabled:opacity-50 disabled:pointer-events-none transition-colors duration-200"
          data-headlessui-state=""
          id="headlessui-popover-button-:r0:"
          role="button"
          type="button"
        >
          <span
            class="grow"
          >
            Click Me
          </span>
          <svg
            class="shrink-0 ml-2 text-lg"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g>
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
              <path
                d="M12 16l-6-6h12z"
              />
            </g>
          </svg>
        </button>
        <div
          class="z-20 absolute min-w-full"
          style="position: absolute; left: 0px; top: 0px;"
        >
          <div
            class="p-2 shadow-md rounded bg-gray-700 border border-gray-500 text-white"
            data-headlessui-state=""
            hidden=""
            id="headlessui-popover-panel-:r1:"
            style="display: none;"
            tabindex="-1"
          >
            Content
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="relative inline-block"
      data-headlessui-state=""
    >
      <button
        aria-controls="headlessui-popover-panel-:r1:"
        aria-expanded="false"
        class="px-4 py-2 rounded text-base bg-cyan text-gray-700 shadow hover:bg-cyan-400 focus:bg-cyan-400 focus:ring-cyan inline-flex items-center justify-center text-center font-medium leading-6 whitespace-nowrap select-none cursor-pointer focus:outline-none focus:ring focus:ring-opacity-60 disabled:opacity-50 disabled:pointer-events-none transition-colors duration-200"
        data-headlessui-state=""
        id="headlessui-popover-button-:r0:"
        role="button"
        type="button"
      >
        <span
          class="grow"
        >
          Click Me
        </span>
        <svg
          class="shrink-0 ml-2 text-lg"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          stroke-width="0"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <path
              d="M0 0h24v24H0z"
              fill="none"
            />
            <path
              d="M12 16l-6-6h12z"
            />
          </g>
        </svg>
      </button>
      <div
        class="z-20 absolute min-w-full"
        style="position: absolute; left: 0px; top: 0px;"
      >
        <div
          class="p-2 shadow-md rounded bg-gray-700 border border-gray-500 text-white"
          data-headlessui-state=""
          hidden=""
          id="headlessui-popover-panel-:r1:"
          style="display: none;"
          tabindex="-1"
        >
          Content
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Popover when opened should render the button and the panel 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="relative inline-block"
        data-headlessui-state="open"
      >
        <button
          aria-controls="headlessui-popover-panel-:r6:"
          aria-expanded="true"
          class="px-4 py-2 rounded text-base bg-cyan text-gray-700 shadow hover:bg-cyan-400 focus:bg-cyan-400 focus:ring-cyan inline-flex items-center justify-center text-center font-medium leading-6 whitespace-nowrap select-none cursor-pointer focus:outline-none focus:ring focus:ring-opacity-60 disabled:opacity-50 disabled:pointer-events-none transition-colors duration-200"
          data-headlessui-state="open"
          id="headlessui-popover-button-:r5:"
          role="button"
          type="button"
        >
          <span
            class="grow"
          >
            Click Me
          </span>
          <svg
            class="shrink-0 ml-2 text-lg"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g>
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
              <path
                d="M12 16l-6-6h12z"
              />
            </g>
          </svg>
        </button>
        <div
          class="z-20 absolute min-w-full"
          style="position: absolute; left: 0px; top: 0px;"
        >
          <div
            class="p-2 shadow-md rounded bg-gray-700 border border-gray-500 text-white"
            data-headlessui-state="open"
            id="headlessui-popover-panel-:r6:"
            style=""
            tabindex="-1"
          >
            Content
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="relative inline-block"
      data-headlessui-state="open"
    >
      <button
        aria-controls="headlessui-popover-panel-:r6:"
        aria-expanded="true"
        class="px-4 py-2 rounded text-base bg-cyan text-gray-700 shadow hover:bg-cyan-400 focus:bg-cyan-400 focus:ring-cyan inline-flex items-center justify-center text-center font-medium leading-6 whitespace-nowrap select-none cursor-pointer focus:outline-none focus:ring focus:ring-opacity-60 disabled:opacity-50 disabled:pointer-events-none transition-colors duration-200"
        data-headlessui-state="open"
        id="headlessui-popover-button-:r5:"
        role="button"
        type="button"
      >
        <span
          class="grow"
        >
          Click Me
        </span>
        <svg
          class="shrink-0 ml-2 text-lg"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          stroke-width="0"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <path
              d="M0 0h24v24H0z"
              fill="none"
            />
            <path
              d="M12 16l-6-6h12z"
            />
          </g>
        </svg>
      </button>
      <div
        class="z-20 absolute min-w-full"
        style="position: absolute; left: 0px; top: 0px;"
      >
        <div
          class="p-2 shadow-md rounded bg-gray-700 border border-gray-500 text-white"
          data-headlessui-state="open"
          id="headlessui-popover-panel-:r6:"
          style=""
          tabindex="-1"
        >
          Content
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
