// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DatePickerRange /> When datepicker is closed should have date when valid 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="headlessui-portal-root"
    >
      <div
        data-headlessui-portal=""
      />
      <div
        data-headlessui-portal=""
      />
    </div>
    <div>
      <div
        class="relative z-10"
        data-headlessui-state=""
      >
        <button
          aria-expanded="false"
          data-headlessui-state=""
          data-testid="datepicker-range-toggle-icon"
          id="headlessui-popover-button-:r5:"
          type="button"
        >
          <div
            class="flex items-center justify-between font-normal text-gray-25 text-base border border-gray-200 rounded py-2 px-4"
            data-testid="date-range"
          >
            <span>
              Jan 01, 2021
            </span>
            <span
              class="mx-2 text-gray-200"
            >
              to
            </span>
            <span>
              Jan 01, 2022
            </span>
            <svg
              class="ml-4 text-lg"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g>
                <path
                  d="M0 0h24v24H0z"
                  fill="none"
                />
                <path
                  d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2zM4 9v10h16V9H4zm2 4h5v4H6v-4z"
                />
              </g>
            </svg>
          </div>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="relative z-10"
      data-headlessui-state=""
    >
      <button
        aria-expanded="false"
        data-headlessui-state=""
        data-testid="datepicker-range-toggle-icon"
        id="headlessui-popover-button-:r5:"
        type="button"
      >
        <div
          class="flex items-center justify-between font-normal text-gray-25 text-base border border-gray-200 rounded py-2 px-4"
          data-testid="date-range"
        >
          <span>
            Jan 01, 2021
          </span>
          <span
            class="mx-2 text-gray-200"
          >
            to
          </span>
          <span>
            Jan 01, 2022
          </span>
          <svg
            class="ml-4 text-lg"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g>
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
              <path
                d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2zM4 9v10h16V9H4zm2 4h5v4H6v-4z"
              />
            </g>
          </svg>
        </div>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<DatePickerRange /> When datepicker is closed should have placeholder when empty 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="relative z-10"
        data-headlessui-state=""
      >
        <button
          aria-expanded="false"
          data-headlessui-state=""
          data-testid="datepicker-range-toggle-icon"
          id="headlessui-popover-button-:r0:"
          type="button"
        >
          <div
            class="flex items-center justify-between font-normal text-gray-25 text-base border border-gray-200 rounded py-2 px-4"
            data-testid="date-range"
          >
            <span>
              Select a date range
            </span>
            <svg
              class="ml-4 text-lg"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g>
                <path
                  d="M0 0h24v24H0z"
                  fill="none"
                />
                <path
                  d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2zM4 9v10h16V9H4zm2 4h5v4H6v-4z"
                />
              </g>
            </svg>
          </div>
        </button>
      </div>
    </div>
    <div
      id="headlessui-portal-root"
    >
      <div
        data-headlessui-portal=""
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="relative z-10"
      data-headlessui-state=""
    >
      <button
        aria-expanded="false"
        data-headlessui-state=""
        data-testid="datepicker-range-toggle-icon"
        id="headlessui-popover-button-:r0:"
        type="button"
      >
        <div
          class="flex items-center justify-between font-normal text-gray-25 text-base border border-gray-200 rounded py-2 px-4"
          data-testid="date-range"
        >
          <span>
            Select a date range
          </span>
          <svg
            class="ml-4 text-lg"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g>
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
              <path
                d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2zM4 9v10h16V9H4zm2 4h5v4H6v-4z"
              />
            </g>
          </svg>
        </div>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
