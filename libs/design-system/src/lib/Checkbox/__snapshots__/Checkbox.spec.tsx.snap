// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox when rendered with a label should display the label 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="flex items-center space-x-3 text-white text-base"
      >
        <button
          aria-checked="false"
          aria-labelledby="headlessui-label-:r1:"
          class="focus:ring-gray shrink-0 flex items-center justify-center w-4 h-4 border border-gray-200 rounded cursor-pointer focus:ring-2 focus:outline-none focus:ring-opacity-60 transition-colors ease-in-out duration-200"
          data-headlessui-state=""
          id="headlessui-switch-:r0:"
          role="switch"
          tabindex="0"
          type="button"
        />
        <label
          id="headlessui-label-:r1:"
        >
          Checkbox label
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="flex items-center space-x-3 text-white text-base"
    >
      <button
        aria-checked="false"
        aria-labelledby="headlessui-label-:r1:"
        class="focus:ring-gray shrink-0 flex items-center justify-center w-4 h-4 border border-gray-200 rounded cursor-pointer focus:ring-2 focus:outline-none focus:ring-opacity-60 transition-colors ease-in-out duration-200"
        data-headlessui-state=""
        id="headlessui-switch-:r0:"
        role="switch"
        tabindex="0"
        type="button"
      />
      <label
        id="headlessui-label-:r1:"
      >
        Checkbox label
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox when toggle is checked should display a checkmark 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="flex items-center space-x-3 text-white text-base"
      >
        <button
          aria-checked="true"
          class="bg-cyan border-cyan focus:ring-cyan shrink-0 flex items-center justify-center w-4 h-4 border border-gray-200 rounded cursor-pointer focus:ring-2 focus:outline-none focus:ring-opacity-60 transition-colors ease-in-out duration-200"
          data-headlessui-state="checked"
          id="headlessui-switch-:r3:"
          role="switch"
          tabindex="0"
          type="button"
        >
          <svg
            class="text-black h-2 ml-px"
            fill="currentColor"
            viewBox="0 0 9 8"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2.5279 7.00293C2.61863 7.09961 2.74531 7.15445 2.8779 7.15445C3.01049 7.15445 3.13717 7.09961 3.2279 7.00293L8.8479 1.38293C8.94256 1.28905 8.9958 1.16125 8.9958 1.02793C8.9958 0.89461 8.94256 0.766812 8.8479 0.672929L8.3179 0.142929C8.12348 -0.0476429 7.81232 -0.0476429 7.6179 0.142929L2.8779 4.88293L1.3779 3.39293C1.28717 3.29625 1.16049 3.24141 1.0279 3.24141C0.895313 3.24141 0.768633 3.29625 0.677899 3.39293L0.147899 3.92293C0.0532428 4.01681 0 4.14461 0 4.27793C0 4.41125 0.0532428 4.53904 0.147899 4.63293L2.5279 7.00293Z"
            />
          </svg>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="flex items-center space-x-3 text-white text-base"
    >
      <button
        aria-checked="true"
        class="bg-cyan border-cyan focus:ring-cyan shrink-0 flex items-center justify-center w-4 h-4 border border-gray-200 rounded cursor-pointer focus:ring-2 focus:outline-none focus:ring-opacity-60 transition-colors ease-in-out duration-200"
        data-headlessui-state="checked"
        id="headlessui-switch-:r3:"
        role="switch"
        tabindex="0"
        type="button"
      >
        <svg
          class="text-black h-2 ml-px"
          fill="currentColor"
          viewBox="0 0 9 8"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M2.5279 7.00293C2.61863 7.09961 2.74531 7.15445 2.8779 7.15445C3.01049 7.15445 3.13717 7.09961 3.2279 7.00293L8.8479 1.38293C8.94256 1.28905 8.9958 1.16125 8.9958 1.02793C8.9958 0.89461 8.94256 0.766812 8.8479 0.672929L8.3179 0.142929C8.12348 -0.0476429 7.81232 -0.0476429 7.6179 0.142929L2.8779 4.88293L1.3779 3.39293C1.28717 3.29625 1.16049 3.24141 1.0279 3.24141C0.895313 3.24141 0.768633 3.29625 0.677899 3.39293L0.147899 3.92293C0.0532428 4.01681 0 4.14461 0 4.27793C0 4.41125 0.0532428 4.53904 0.147899 4.63293L2.5279 7.00293Z"
          />
        </svg>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
